# Generated by Django 5.2.5 on 2025-09-14 21:33

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('hit_die', models.PositiveSmallIntegerField(default=8)),
                ('saving_throws', models.JSONField(blank=True, default=list)),
                ('skill_proficiency_options', models.JSONField(blank=True, default=dict)),
                ('data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name_plural': 'classes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Feat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=96, unique=True)),
                ('description', models.TextField()),
                ('data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=96, unique=True)),
                ('category', models.CharField(blank=True, default='', max_length=48)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True, default='')),
                ('data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('ability', models.CharField(choices=[('str', 'Strength'), ('dex', 'Dexterity'), ('con', 'Constitution'), ('int', 'Intelligence'), ('wis', 'Wisdom'), ('cha', 'Charisma')], max_length=3)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=96, unique=True)),
                ('level', models.PositiveSmallIntegerField(default=0)),
                ('school', models.CharField(blank=True, default='', max_length=32)),
                ('casting_time', models.CharField(blank=True, default='', max_length=64)),
                ('range', models.CharField(blank=True, default='', max_length=64)),
                ('components', models.CharField(blank=True, default='', max_length=64)),
                ('duration', models.CharField(blank=True, default='', max_length=64)),
                ('description', models.TextField(blank=True, default='')),
                ('data', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Background',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.TextField(blank=True, default='')),
                ('data', models.JSONField(blank=True, default=dict)),
                ('languages', models.ManyToManyField(blank=True, related_name='backgrounds', to='core.language')),
                ('skills', models.ManyToManyField(blank=True, related_name='backgrounds', to='core.skill')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('speed', models.PositiveSmallIntegerField(default=30)),
                ('size', models.CharField(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')], default='medium', max_length=8)),
                ('alignment', models.TextField(blank=True, default='')),
                ('age', models.TextField(blank=True, default='')),
                ('data', models.JSONField(blank=True, default=dict)),
                ('languages', models.ManyToManyField(blank=True, related_name='species', to='core.language')),
            ],
            options={
                'verbose_name_plural': 'species',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Subclass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('parent_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subclasses', to='core.class')),
            ],
            options={
                'ordering': ['parent_class__name', 'name'],
                'unique_together': {('parent_class', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Subrace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=64)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('species', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subraces', to='core.species')),
            ],
            options={
                'ordering': ['species__name', 'name'],
                'unique_together': {('species', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=96)),
                ('str_score', models.PositiveSmallIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('dex_score', models.PositiveSmallIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('con_score', models.PositiveSmallIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('int_score', models.PositiveSmallIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('wis_score', models.PositiveSmallIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('cha_score', models.PositiveSmallIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('alignment', models.CharField(blank=True, default='', max_length=32)),
                ('xp', models.PositiveIntegerField(default=0)),
                ('inspiration', models.BooleanField(default=False)),
                ('hp_current', models.IntegerField(default=0)),
                ('hp_temp', models.IntegerField(default=0)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('background', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='characters', to='core.background')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to=settings.AUTH_USER_MODEL)),
                ('feats', models.ManyToManyField(blank=True, related_name='characters', to='core.feat')),
                ('languages', models.ManyToManyField(blank=True, related_name='characters', to='core.language')),
                ('species', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='characters', to='core.species')),
                ('subrace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='characters', to='core.subrace')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CharacterItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.character')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_items', to='core.item')),
            ],
            options={
                'indexes': [models.Index(fields=['character', 'item'], name='core_charac_charact_541898_idx')],
                'unique_together': {('character', 'item')},
            },
        ),
        migrations.CreateModel(
            name='CharacterSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('expertise', models.BooleanField(default=False)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_links', to='core.character')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_links', to='core.skill')),
            ],
            options={
                'indexes': [models.Index(fields=['character', 'skill'], name='core_charac_charact_2ef853_idx')],
                'unique_together': {('character', 'skill')},
            },
        ),
        migrations.CreateModel(
            name='CharacterSpell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('known', models.BooleanField(default=True)),
                ('prepared', models.BooleanField(default=False)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spells', to='core.character')),
                ('spell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_spells', to='core.spell')),
            ],
            options={
                'indexes': [models.Index(fields=['character', 'spell'], name='core_charac_charact_581b27_idx')],
                'unique_together': {('character', 'spell')},
            },
        ),
        migrations.CreateModel(
            name='CharacterClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('level', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('is_primary', models.BooleanField(default=False)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='core.character')),
                ('clazz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_memberships', to='core.class')),
                ('subclass', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='character_memberships', to='core.subclass')),
            ],
            options={
                'indexes': [models.Index(fields=['character', 'clazz'], name='core_charac_charact_d8a058_idx')],
                'unique_together': {('character', 'clazz')},
            },
        ),
        migrations.AddIndex(
            model_name='character',
            index=models.Index(fields=['user', 'name'], name='core_charac_user_id_177b12_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='character',
            unique_together={('user', 'name')},
        ),
    ]
